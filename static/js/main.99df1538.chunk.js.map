{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isVisible","setListVisible","none","isSorted","setListSorted","isReversed","setListReversed","goods","name","sort","good1","good2","localeCompare","length","reverse","className","type","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"wJAiBKA,E,4CAbCC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,eAAAA,I,oBAAAA,M,KAME,IAAME,EAAM,WACjB,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAkCF,mBAASH,EAASM,MAApD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAsCL,oBAAS,GAA/C,mBAAOM,EAAP,KAAmBC,EAAnB,KACMC,EAAK,UAAOV,GAElB,OAAQM,GACN,KAAKP,EAASY,KACZD,EAAME,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MACjD,MAEF,KAAKf,EAASiB,OACZN,EAAME,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMG,OAASF,EAAME,UAOlDR,GACFE,EAAMO,UAaR,OACE,sBAAKC,UAAU,MAAf,WACIf,GACA,wBACEgB,KAAK,SACLD,UAAU,SACVE,QAhBkB,kBAAMhB,GAAgBD,IAa1C,mBASDA,GACC,gCACE,wBACEgB,KAAK,SACLD,UAAU,SACVE,QA1Be,kBAAMb,EAAcR,EAASY,OAuB9C,iCAQA,wBACEQ,KAAK,SACLD,UAAU,SACVE,QAjCiB,kBAAMb,EAAcR,EAASiB,SA8BhD,4BAQA,wBACEG,KAAK,SACLD,UAAU,SACVE,QAnCY,kBAAMX,GAAiBD,IAgCrC,qBAQA,wBACEW,KAAK,SACLD,UAAU,SACVE,QAhDU,WAClBX,GAAgB,GAChBF,EAAcR,EAASM,OA2CjB,mBAQA,qBAAKa,UAAU,QAAf,SACE,6BACGR,EAAMW,KAAI,SAAAC,GAAI,OACb,oBACEJ,UAAU,cADZ,SAIGI,GAFIA,iBCxGvBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.99df1538.chunk.js","sourcesContent":["import { useState } from 'react';\nimport './App.css';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  none,\n  name,\n  length,\n}\n\nexport const App = () => {\n  const [isVisible, setListVisible] = useState(false);\n  const [isSorted, setListSorted] = useState(SortType.none);\n  const [isReversed, setListReversed] = useState(false);\n  const goods = [...goodsFromServer];\n\n  switch (isSorted) {\n    case SortType.name:\n      goods.sort((good1, good2) => good1.localeCompare(good2));\n      break;\n\n    case SortType.length:\n      goods.sort((good1, good2) => good1.length - good2.length);\n      break;\n\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    goods.reverse();\n  }\n\n  const handleListVisible = () => setListVisible(!isVisible);\n  const handleSortByName = () => setListSorted(SortType.name);\n  const handleSortByLength = () => setListSorted(SortType.length);\n  const handleReset = () => {\n    setListReversed(false);\n    setListSorted(SortType.none);\n  };\n\n  const handleReverse = () => setListReversed(!isReversed);\n\n  return (\n    <div className=\"App\">\n      {!isVisible && (\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={handleListVisible}\n        >\n          Start\n        </button>\n      )}\n\n      {isVisible && (\n        <div>\n          <button\n            type=\"button\"\n            className=\"button\"\n            onClick={handleSortByName}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"button\"\n            onClick={handleSortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"button\"\n            onClick={handleReverse}\n          >\n            Reverse\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"button\"\n            onClick={handleReset}\n          >\n            Reset\n          </button>\n\n          <div className=\"goods\">\n            <ul>\n              {goods.map(good => (\n                <li\n                  className=\"goods__item\"\n                  key={good}\n                >\n                  {good}\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}